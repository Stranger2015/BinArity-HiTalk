% if element type is enum `hierarchy` mode
% else `linear` mode
:- object(enum(type, _Elements_ ),
        implements([setp, setp, listp]),
        implements(setp),
        extends(set)
        ).

        :- public
                hitalk_type,% :- true by default
                prolog_type,% :- true by default
                user_type.   % :- true by default

:- end_object.

% generated by the reason that enum has elements of enum type
:- object(enum(hitalk_type, _),
        extends(enum(type)),
        implements(setp)).

        :- public
                object,    % :- true by default
                category,  % :- true by default
                protocol,   % :- true by default
                enum,
                module,
                event.


:- end_object.